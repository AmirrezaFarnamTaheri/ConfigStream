name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["ConfigStream Pipeline"]
    types: [completed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout with PAT
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }} # Needed to trigger workflow_run
          ref: main
          fetch-depth: 1

      - name: Verify output directory exists
        run: |
          if [ ! -d "output" ] || [ -z "$(ls -A output)" ]; then
            echo "Error: output directory is missing or empty"
            exit 1
          fi
          # Verify critical files exist
          test -f output/metadata.json
          test -f output/proxies.json

      - name: Build Pages artifact
        run: |
          set -euxo pipefail
          rm -rf github_pages_root
          mkdir -p github_pages_root

          cp -v .nojekyll github_pages_root/.nojekyll || true
          cp -v index.html proxies.html statistics.html sw.js github_pages_root/
          cp -rv assets github_pages_root/assets

          # Use the output from the repository (already committed by pipeline)
          cp -rv output github_pages_root/

          ts=$(date +%Y%m%d%H%M%S)
          sed -i "s/const VERSION = '[^']*'/const VERSION = '${ts}'/" github_pages_root/assets/js/cache-config.js

          test -s github_pages_root/index.html
          test -d github_pages_root/output
          # Ensure there is some data to deploy
          test -n "$(find github_pages_root/output -name '*.json' -print -quit)"

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: github_pages_root
          retention-days: 1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Verify deployment
        run: 'echo "Pages deployed to: ${{ steps.deployment.outputs.page_url }}"'
